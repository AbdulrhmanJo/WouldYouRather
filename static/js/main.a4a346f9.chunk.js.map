{"version":3,"sources":["icon/undraw.svg","icon/page_not_found.svg","utils/_DATA.js","utils/api.js","actions/questions.js","actions/shared.js","actions/users.js","components/pollCard.js","utils/helpers.js","components/home.js","components/Option.js","components/PollQuestion.js","components/ResultCard.js","components/PollResault.js","components/pageNotFound.js","components/pollPage.js","components/UserRecord.js","components/Leaderboard.js","components/newPoll.js","actions/authedUser.js","components/Navbar.js","components/login.js","components/App.js","reducers/index.js","reducers/users.js","reducers/questions.js","reducers/authedUser.js","middleware/logger.js","middleware/index.js","index.js"],"names":["module","exports","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","handleAddQuestion","dispatch","getState","showLoading","then","type","addQuestion","hideLoading","handleSaveQuestionAnswer","questionAnswer","handleInitialData","all","receiveUsers","receiveQuestions","PollCard","this","props","user","to","className","src","alt","length","toUTCString","substr","convertTime","Component","connect","Home","state","questionType","handleChoice","event","val","target","innerText","setState","handleSwitchBtn","nextSibling","classList","toggle","closeDropDwon","matches","i","dropdowns","document","getElementsByClassName","openDropdown","contains","remove","addEventListener","removeEventListener","answeredQuestionsID","unAnsweredQuestionsID","onClick","map","key","noQuestion","questionsID","Object","keys","sort","a","b","forEach","found","QuestionVotes","push","Option","option","optionText","stateOption","value","checked","onChange","handleUserchoice","htmlFor","PollQuestion","handlePollAnswer","preventDefault","onSubmit","disabled","totalVotes","optionPercentage","optionVote","toFixed","calcPercentageOfPoll","indexOf","style","width","PollResualt","PageNotFound","pageNotFound","PollPage","match","params","authedUserInfo","PollResault","filter","UserRecord","rank","userName","userAvatar","answeredQuestions","createdQuestions","score","Leaderboard","userRank","userScore","aUser","bUser","usersScore","index","NewPoll","toHome","handleStateChange","addNewPoll","placeholder","setAuthedUser","Navbar","signOut","location","exact","activeClassName","pathname","size","withRouter","Login","handleState","lastChild","textContent","handleBtn","signIn","u","entries","App","unAuthorised","backgroundColor","height","path","component","combineReducers","action","loadingBar","loadingBarReducer","logger","store","next","console","group","log","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,kNCAvCC,EAAQ,CACRC,SAAU,CACRC,GAAI,WACJC,KAAM,YACNC,UAAW,uDACXC,QAAS,CACP,yBAA0B,YAC1B,uBAAwB,YACxB,uBAA0B,YAC1B,sBAAyB,aAE3BC,UAAW,CAAC,yBAA0B,2BAExCC,cAAe,CACbL,GAAI,gBACJC,KAAM,iBACNC,UAAW,uDACXC,QAAS,CACP,sBAAyB,YACzB,uBAA0B,aAE5BC,UAAW,CAAC,wBAAyB,0BAEvCE,QAAS,CACPN,GAAI,UACJC,KAAM,WACNC,UAAW,qDACXC,QAAS,CACP,uBAA0B,YAC1B,sBAAyB,YACzB,uBAAwB,aAE1BC,UAAW,CAAC,uBAAwB,4BAIpCA,EAAY,CACd,yBAA0B,CACxBJ,GAAI,yBACJO,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,YACRC,KAAM,mCAERC,UAAW,CACTF,MAAO,GACPC,KAAM,mCAGV,uBAAwB,CACtBX,GAAI,uBACJO,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,sBAERC,UAAW,CACTF,MAAO,CAAC,UAAW,YACnBC,KAAM,0BAGV,uBAA0B,CACxBX,GAAI,yBACJO,OAAQ,WACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,kBAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,kBAGV,sBAAyB,CACvBX,GAAI,wBACJO,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,GACPC,KAAM,4BAERC,UAAW,CACTF,MAAO,CAAC,YACRC,KAAM,4BAGV,sBAAyB,CACvBX,GAAI,wBACJO,OAAQ,gBACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,iBACRC,KAAM,qBAERC,UAAW,CACTF,MAAO,CAAC,WACRC,KAAM,oCAGV,uBAA0B,CACxBX,GAAI,yBACJO,OAAQ,UACRC,UAAW,cACXC,UAAW,CACTC,MAAO,CAAC,WACRC,KAAM,oBAERC,UAAW,CACTF,MAAO,CAAC,iBACRC,KAAM,iBAqBL,SAASE,EAAeC,GAC7B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAaJ,EAASP,OACtBY,EAmDV,YAAoE,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,cAAed,EAAU,EAAVA,OACvD,MAAO,CACLP,GAvEKsB,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAwE3FjB,UAAWkB,KAAKC,MAChBpB,SACAE,UAAW,CACTC,MAAO,GACPC,KAAMS,GAERR,UAAW,CACTF,MAAO,GACPC,KAAMU,IA9DkBO,CAAed,GAEzCe,YAAW,WACTzB,EAAS,eACJA,EADI,eAENe,EAAkBnB,GAAKmB,IAG1BrB,EAAK,eACAA,EADA,eAEFoB,EAFE,eAGEpB,EAAMoB,GAHR,CAIDd,UAAWN,EAAMoB,GAAYd,UAAU0B,OAAO,CAACX,EAAkBnB,SAIrEgB,EAAIG,KACH,QCpIF,SAASY,EAAmBC,GAC/B,ODuIK,YAA4D,IAA5Bd,EAA2B,EAA3BA,WAAYe,EAAe,EAAfA,IAAKC,EAAU,EAAVA,OACtD,OAAO,IAAInB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,WACT/B,EAAK,eACAA,EADA,eAEFoB,EAFE,eAGEpB,EAAMoB,GAHR,CAIDf,QAAQ,eACHL,EAAMoB,GAAYf,QADhB,eAEJ8B,EAAMC,QAKb9B,EAAS,eACJA,EADI,eAEN6B,EAFM,eAGF7B,EAAU6B,GAHR,eAIJC,EAJI,eAKA9B,EAAU6B,GAAKC,GALf,CAMHxB,MAAON,EAAU6B,GAAKC,GAAQxB,MAAMoB,OAAO,CAACZ,UAKlDF,MACC,QCjKEmB,CAAoBH,G,qBChBxB,SAASI,EAAkBtB,GAC9B,OAAO,SAACuB,EAAUC,GACdD,EAASE,yBADkB,IDUNP,ECRbd,EAAeoB,IAAfpB,WAER,OADAJ,EAASP,OAASW,GDOGc,ECNDlB,EDOjBD,EAAcmB,ICNZQ,MAAK,SAACrB,GAAD,OAAuBkB,EAmBzC,SAAqBvB,GACjB,MAAO,CACH2B,KA7BoB,eA8BpB3B,YAtB0C4B,CAAYvB,OACjDqB,MAAK,kBAAMH,EAASM,6BAK1B,SAASC,EAAyBV,GACrC,OAAO,SAAEG,EAAUC,GACfD,EAASE,yBADoB,IAEtBrB,EAAcoB,IAAdpB,WAGP,OAFAgB,EAAOhB,WAAaA,EAEba,EAAmBG,GACzBM,MAAK,kBAAMH,EAapB,SAAwBH,GACpB,MAAM,CACFO,KArC6B,wBAsC7BP,UAhBqBW,CAAeX,OACnCM,MAAK,kBAAMH,EAASM,6BCpBtB,SAASG,IACZ,OAAO,SAACT,GACJ,OFAGtB,QAAQgC,IAAI,CDkHZ,IAAIhC,SAAQ,SAACC,EAAKC,GACvBY,YAAW,kBAAMb,EAAI,eAAIlB,MAAS,QAK7B,IAAIiB,SAAQ,SAACC,EAAKC,GACvBY,YAAW,kBAAMb,EAAI,eAAIZ,MAAa,UCtHrCoC,MAAK,yCAAwB,CAC5B1C,MADI,KAEJM,UAFI,SEFHoC,MAAK,YAAwB,IAAtB1C,EAAqB,EAArBA,MAAMM,EAAe,EAAfA,UACViC,ECRL,SAAsBvC,GACzB,MAAO,CACH2C,KAJqB,gBAKrB3C,SDKakD,CAAalD,IACtBuC,EDkCL,SAA0BjC,GAC7B,MAAO,CACHqC,KA7CyB,oBA8CzBrC,aCrCa6C,CAAiB7C,Q,gCEPhC8C,E,iLACO,IAAD,EAC2CC,KAAKC,MAAMtC,SAAlDd,EADJ,EACIA,GAAGQ,EADP,EACOA,UAAWC,EADlB,EACkBA,UAAWG,EAD7B,EAC6BA,UAD7B,EAEwBuC,KAAKC,MAAMC,KAA/BpD,EAFJ,EAEIA,KAAOC,EAFX,EAEWA,UAEf,OACI,kBAAC,IAAD,CAAMoD,GAAE,qBAAgBtD,GAAMuD,UAAU,YACpC,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,0BACX,yBAAKC,IAAKtD,EAAWuD,IAAG,oBAAexD,GAAQsD,UAAU,WACzD,6BACI,uBAAGA,UAAU,gCAAgCtD,KAGrD,yBAAKsD,UAAU,yBACX,2BAAI9C,EAAUC,MAAMgD,OAAQ9C,EAAUF,MAAMgD,OAA5C,YAGR,uBAAGH,UAAU,iBAAb,2BACyB9C,EAAUE,KADnC,eAC8CC,EAAUD,KADxD,OAGA,uBAAG4C,UAAU,iBCzBtB,SAAqB/C,GAGxB,OAFa,IAAIkB,KAAKlB,GAEVmD,cAAcC,OAAO,EAAE,IDsBOC,CAAYrD,S,GArBnCsD,aAqCRC,qBATS,SAAC,EAAD,GAA8C,IAA3C3D,EAA0C,EAA1CA,UAAWN,EAA+B,EAA/BA,MAC5BgB,GAD2D,EAAxBI,WACxBd,EADgD,EAATJ,KAGxD,MAAO,CACHc,WACAuC,KAHSvD,EAAMgB,EAASP,WAOjBwD,CAAyBb,G,iBEpClCc,E,2MAEFC,MAAQ,CACJC,aAAc,c,EAGlBC,aAAe,SAACC,GACZ,IAAMC,EAAMD,EAAME,OAAOC,UACtBF,IAAQ,EAAKJ,MAAMC,cAClB,EAAKM,SAAS,CACVN,aAAcG,K,EAK1BI,gBAAkB,SAACL,GACHA,EAAME,OACdI,YAAYC,UAAUC,OAAO,S,EAGrCC,cAAgB,SAACT,GACb,IAAKA,EAAME,OAAOQ,QAAQ,iBAAkB,CACxC,IACIC,EADAC,EAAYC,SAASC,uBAAuB,oBAEhD,IAAKH,EAAI,EAAGA,EAAIC,EAAUtB,OAAQqB,IAAK,CACrC,IAAII,EAAeH,EAAUD,GACzBI,EAAaR,UAAUS,SAAS,SAClCD,EAAaR,UAAUU,OAAO,W,mFAOtCJ,SAASK,iBAAiB,QAASnC,KAAK0B,iB,6CAIxCI,SAASM,oBAAoB,QAASpC,KAAK0B,iB,+BAGtC,IAAD,EACmD1B,KAAKC,MAApDoC,EADJ,EACIA,oBAAsBC,EAD1B,EAC0BA,sBACtBvB,EAAiBf,KAAKc,MAAtBC,aAER,OACI,yBAAKX,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,wBAAd,aACA,yBAAKA,UAAU,YACX,4BAAQA,UAAU,eAAemC,QAASvC,KAAKsB,iBAAkBP,GAExC,eAAlBA,EACK,yBAAKX,UAAU,oBACX,yBAAKmC,QAASvC,KAAKgB,aAAcZ,UAAU,iBAA3C,cACA,yBAAKmC,QAASvC,KAAKgB,cAAnB,aAEJ,yBAAKZ,UAAU,oBACX,yBAAKmC,QAASvC,KAAKgB,cAAnB,cACA,yBAAKuB,QAASvC,KAAKgB,aAAcZ,UAAU,iBAA3C,eAKxB,uBAAGA,UAAU,QAAb,iDAIqB,aAAjBW,EAEIsB,EAAoBG,KAAI,SAAC3F,GAAD,OACpB,kBAAC,EAAD,CAAU4F,IAAK5F,EAAIA,GAAIA,OAE7ByF,EAAsB/B,OAAS,EAEzB+B,EAAsBE,KAAI,SAAC3F,GAAD,OACtB,kBAAC,EAAD,CAAU4F,IAAK5F,EAAIA,GAAIA,OAE3B,yBAAKuD,UAAU,mBACX,yBAAKC,IAAKqC,IAAYpC,IAAI,mBAAmBF,UAAU,mBACvD,uBAAGA,UAAU,QAAb,oC,GAhFbO,aAmHJC,qBA1BS,SAAC,GAAqC,IAAnC3D,EAAkC,EAAlCA,UAAWc,EAAuB,EAAvBA,WAC5B4E,GADmD,EAAZhG,MACzBiG,OAAOC,KAAK5F,GAAW6F,MAAK,SAACC,EAAEC,GAAH,OAAS/F,EAAU+F,GAAG3F,UAAYJ,EAAU8F,GAAG1F,cAC3FgF,EAAsB,GACtBC,EAAwB,GAiB5B,OAhBAK,EAAYM,SAAQ,SAAApG,GAGhB,IAFA,IAAIqG,GAAQ,EACNC,EAAa,sBAAOlG,EAAUJ,GAAIS,UAAUC,OAA/B,YAAyCN,EAAUJ,GAAIY,UAAUF,QAC5EqE,EAAI,EAAIA,EAAIuB,EAAc5C,OAAQqB,IACtC,GAAGuB,EAAcvB,KAAO7D,EAAW,CAC/BsE,EAAoBe,KAAKvG,GACzBqG,GAAQ,EACR,MAGJA,GACAZ,EAAsBc,KAAKvG,MAK5B,CACHwF,sBACAC,2BAIO1B,CAAyBC,GCnGzBwC,EAnBA,SAACpD,GAAW,IACfpD,EAAsCoD,EAAtCpD,GAAIyG,EAAkCrD,EAAlCqD,OAAQC,EAA0BtD,EAA1BsD,WAAWC,EAAevD,EAAfuD,YAC/B,OACI,yBAAKpD,UAAU,UACX,2BACIvD,GAAI0G,EACJjE,KAAK,QACLxC,KAAMD,EACN4G,MAAOH,EACPI,QAASF,IAAgBF,EACzBK,SAAU,SAAC1C,GAAD,OAAShB,EAAM2D,iBAAiB3C,MAE9C,2BAAO4C,QAASN,GACXA,KCXXO,E,2MACFhD,MAAQ,CACJwC,OAAQ,M,EAGZM,iBAAmB,SAAC3C,GAChB,EAAKI,SAAS,CACViC,OAAQrC,EAAME,OAAOsC,S,EAI7BM,iBAAmB,SAAC9C,GAChBA,EAAM+C,iBACN,IAAMjF,EAAS,EAAK+B,MAAMwC,OAClBzG,EAAO,EAAKoD,MAAMtC,SAAlBd,GACR,EAAKoD,MAAMf,SAASO,EAAyB,CACzCV,SACAD,IAAIjC,M,wEAIH,IAAD,EACiCmD,KAAKC,MAAMtC,SAAxCL,EADJ,EACIA,UAAWG,EADf,EACeA,UAAWZ,EAD1B,EAC0BA,GACtByG,EAAWtD,KAAKc,MAAhBwC,OACR,OACI,6BACI,0BAAMW,SAAUjE,KAAK+D,iBAAkB3D,UAAU,QAC7C,kBAAC,EAAD,CACIvD,GAAIA,EACJyG,OAAO,YACPE,YAAaxD,KAAKc,MAAMwC,OACxBC,WAAYjG,EAAUE,KACtBoG,iBAAkB5D,KAAK4D,mBAE3B,kBAAC,EAAD,CACI/G,GAAIA,EACJyG,OAAO,YACPE,YAAaxD,KAAKc,MAAMwC,OACxBC,WAAY9F,EAAUD,KACtBoG,iBAAkB5D,KAAK4D,mBAE3B,6BACI,4BAAQM,UAAWZ,EAAQlD,UAAU,gBAArC,e,GA1CGO,aAyDZC,qBAPQ,SAAC,EAAD,GAEnB,MAAO,CACHjD,SAHyC,EAAvBV,UAAuB,EAATJ,OAOzB+D,CAAwBkD,GCpCxBlD,qBANS,SAAC,GACrB,MAAO,CACH7C,WAFoC,EAAjBA,cAMZ6C,EAtBI,SAACX,GAAW,IACnBqD,EAAkCrD,EAAlCqD,OAAQa,EAA0BlE,EAA1BkE,WAAYpG,EAAckC,EAAdlC,WACtBqG,EJCH,SAA8BD,EAAYE,GAC7C,OAASA,EAAWF,EAAc,KAAKG,QAAQ,GIFtBC,CAAqBJ,EAAWb,EAAO/F,MAAMgD,QAAQ,IAC9E,OACQ,yBAAKH,WAAiD,IAAtCkD,EAAO/F,MAAMiH,QAAQzG,GAAqB,gBAAkB,UACxE,yBAAKqC,UAAU,oBACX,uBAAGA,UAAU,eAAekD,EAAO9F,MACnC,uBAAG4C,UAAU,qBAAqBgE,IAEtC,yBAAKhE,UAAU,mBACX,0BAAMqE,MAAO,CAACC,MAAMN,MAExB,uBAAGhE,UAAU,gBAAgBkD,EAAO/F,MAAMgD,OAA1C,cCDDoE,EAZK,SAAC1E,GAAW,IAAD,EACKA,EAAMtC,SAA9BL,EADmB,EACnBA,UAAWG,EADQ,EACRA,UACb0G,EAAa,sBAAI7G,EAAUC,OAAd,YAAwBE,EAAUF,QAAOgD,OAE5D,OACI,6BACI,kBAAC,EAAD,CAAY+C,OAAQhG,EAAW6G,WAAYA,IAC3C,kBAAC,EAAD,CAAYb,OAAQ7F,EAAW0G,WAAYA,M,iBCQxCS,EAdM,SAAC3E,GAClB,OACI,yBAAKG,UAAU,iBACX,qCACA,uBAAGA,UAAW,QAAd,qDACA,6BACI,yBAAKC,IAAKwE,IAAcvE,IAAI,mBAC5B,sDACA,kBAAC,IAAD,CAAMF,UAAU,aAAcD,GAAG,KAAjC,aCLV2E,E,iLAGE,IAAI9E,KAAKC,MAAMtC,SACX,OAAO,kBAAC,EAAD,MAHP,MAMkCqC,KAAKC,MAAMC,KAAzCpD,EANJ,EAMIA,KAAMC,EANV,EAMUA,UAAUE,EANpB,EAMoBA,UAChBJ,EAAOmD,KAAKC,MAAM8E,MAAMC,OAAxBnI,GACAG,EAAWgD,KAAKC,MAAMgF,eAAtBjI,QACR,OACIgD,KAAKC,MAAMtC,SACX,yBAAKyC,UAAU,QACX,yBAAKC,IAAKtD,EAAWuD,IAAG,oBAAexD,GAAQsD,UAAU,oBACzD,uBAAGA,UAAU,oBAAb,sBACA,uBAAGA,UAAU,QAAb,YAA6B,0BAAMA,UAAU,UAAUtD,IAEnDE,EAAQH,GACF,kBAACqI,EAAD,CAAavH,SAAUqC,KAAKC,MAAMtC,WAClC,kBAAC,EAAD,CAAcd,GAAIA,IAIxBI,EAAUsD,OAAS,GAAK,uBAAGH,UAAU,iBAAb,6BAAoDtD,IAG5EG,EAAUkI,QAAO,SAACrG,GAAD,OAASA,IAAQjC,KAAI2F,KAAI,SAAC3F,GAAD,OACtC,kBAAC,EAAD,CAAU4F,IAAK5F,EAAIA,GAAIA,QAKjC,S,GAhCS8D,aAoDRC,qBAfQ,SAAC,EAAD,GAAiD,IAEhEV,EAAM+E,EAFYhI,EAA6C,EAA7CA,UAAWc,EAAkC,EAAlCA,WAAYpB,EAAsB,EAAtBA,MACvCgB,EAAWV,EADkD,EAAZ8H,MACtBC,OAAOnI,IAOxC,OALGc,IACCuC,EAAOvD,EAAMgB,EAASP,QACtB6H,EAAiBtI,EAAMoB,IAGpB,CACHJ,WACAuC,OACA+E,oBAIOrE,CAAwBkE,G,QCnCxBM,EApBI,SAACnF,GAAW,IACnBoF,EAA0EpF,EAA1EoF,KAAMC,EAAoErF,EAApEqF,SAAUC,EAA0DtF,EAA1DsF,WAAYC,EAA8CvF,EAA9CuF,kBAAmBC,EAA2BxF,EAA3BwF,iBAAkBC,EAASzF,EAATyF,MAEzE,OACI,4BACI,4BAAc,IAATL,EAAa,kBAAC,IAAD,MAAqBA,GACvC,4BACI,yBAAKjF,UAAU,iBACX,yBAAKC,IAAKkF,EAAYjF,IAAI,eAC1B,2BAAIgF,KAIZ,4BAAKE,GACL,4BAAKC,GACL,4BAAKC,KCfXC,E,2MAEFC,SAAW,SAACjJ,GACR,IAAIkJ,EAAY,GAahB,OAZgBjD,OAAOC,KAAKlG,GACpBsG,SAAQ,SAAApG,GACZgJ,EAAS,sBACFA,GADE,CAEL,CACIhJ,KACA6I,MAAO9C,OAAOC,KAAKlG,EAAME,GAAIG,SAASuD,OAASqC,OAAOC,KAAKlG,EAAME,GAAII,WAAWsD,aAK5FsF,EAAU/C,MAAK,SAACgD,EAAOC,GAAR,OAAkBA,EAAML,MAAQI,EAAMJ,SAC9CG,G,wEAIP,IAAMG,EAAahG,KAAK4F,SAAS5F,KAAKC,MAAMtD,OACpCA,EAAUqD,KAAKC,MAAftD,MACR,OACI,yBAAKyD,UAAU,QACX,wBAAIA,UAAU,wBAAd,gBACA,uBAAGA,UAAU,QAAb,+CACA,+BACI,+BACI,4BACI,oCACA,oCACA,kDACA,iDACA,uCAGR,+BAEQ4F,EAAWxD,KAAK,SAACtC,EAAK+F,GAAN,OACZ,kBAAC,EAAD,CACIxD,IAAKvC,EAAKrD,GACVwI,KAAMY,EAAM,EACZX,SAAU3I,EAAMuD,EAAKrD,IAAIC,KACzByI,WAAa5I,EAAMuD,EAAKrD,IAAIE,UAC5ByI,kBAAmB5C,OAAOC,KAAKlG,EAAMuD,EAAKrD,IAAIG,SAASuD,OACvDkF,iBAAkB7C,OAAOC,KAAKlG,EAAMuD,EAAKrD,IAAII,WAAWsD,OACxDmF,MAAOxF,EAAKwF,kB,GA9CtB/E,aAgEXC,qBANS,SAAC,GACrB,MAAO,CACHjE,MAF+B,EAAZA,SAMZiE,CAAyB+E,GC/DlCO,E,2MACFpF,MAAQ,CACJxD,UAAW,GACXG,UAAW,GACX0I,QAAQ,G,EAGZC,kBAAoB,SAACnF,GACjB,EAAKI,SAAL,eACKJ,EAAME,OAAOrE,KAAOmE,EAAME,OAAOsC,S,EAI1C4C,WAAa,SAACpF,GACVA,EAAM+C,kBAEN9E,EADqB,EAAKe,MAAlBf,UACCD,EAAkB,CACvBhB,cAAe,EAAK6C,MAAMxD,UAC1BY,cAAe,EAAK4C,MAAMrD,aAG9B,EAAK4D,SAAS,CACV/D,UAAW,GACXG,UAAW,GACX0I,QAAQ,K,wEAIP,IAAD,EACqCnG,KAAKc,MAAtCxD,EADJ,EACIA,UAAWG,EADf,EACeA,UAEnB,OAHI,EAC0B0I,OAGnB,kBAAC,IAAD,CAAUhG,GAAG,MAIpB,yBAAKC,UAAU,QACX,wBAAIA,UAAU,wBAAd,mBACA,0BAAM6D,SAAUjE,KAAKqG,YACjB,uBAAGjG,UAAU,QAAb,qDACA,uBAAGA,UAAU,iBAAb,uBACA,yBAAKA,UAAU,gBACX,2BACItD,KAAK,YACLwC,KAAK,OACLgH,YAAY,mBACZ7C,MAASnG,EACTqG,SAAW3D,KAAKoG,oBAEpB,2BACItJ,KAAK,YACLwC,KAAK,OACLgH,YAAY,mBACZ7C,MAAShG,EACTkG,SAAW3D,KAAKoG,qBAIxB,4BAAQhG,UAAU,WAAW8D,UAAW5G,IAAeG,GAAvD,a,GA1DEkD,aAiEPC,sBAAUsF,G,QClElB,SAASK,EAAc1J,GAC1B,MAAO,CACHyC,KALuB,kBAMvBzC,M,ICCF2J,E,2MACFC,QAAU,SAACxF,GACPA,EAAM+C,iBAEN,EAAK/D,MAAMf,SAASqH,EADT,Q,wEAIN,IAAD,EACmBvG,KAAKC,MAAMC,KAA9BnD,EADA,EACAA,UAAWD,EADX,EACWA,KACX4J,EAAa1G,KAAKC,MAAlByG,SAER,OACI,yBAAKtG,UAAU,OACX,wBAAIA,UAAU,eAAd,qBAEA,yBAAKA,UAAU,cACX,yBAAKC,IAAKtD,EAAWuD,IAAG,oBAAexD,GAAQsD,UAAU,mBACzD,uBAAGA,UAAU,mBAAb,UAAuCtD,IAE3C,wBAAIsD,UAAU,YACV,kBAAC,IAAD,CACID,GAAG,IAAIwG,OAAK,EACZvG,UAAU,iBACVwG,gBAAgB,UAGc,MAAtBF,EAASG,SACP,kBAAC,IAAD,CAAeC,KAAM,GAAI1G,UAAU,wBACnC,kBAAC,IAAD,CAAe0G,KAAM,GAAI1G,UAAU,wBAE7C,0BAAMA,UAAU,uBAAhB,SAGJ,kBAAC,IAAD,CACID,GAAG,OAAOwG,OAAK,EACfvG,UAAU,iBACVwG,gBAAgB,UAGc,SAAtBF,EAASG,SACP,kBAAC,IAAD,CAAeC,KAAM,GAAI1G,UAAU,wBACnC,kBAAC,IAAD,CAAsB0G,KAAM,GAAI1G,UAAU,wBAEhD,0BAAMA,UAAU,uBAAhB,oBAGR,kBAAC,IAAD,CACID,GAAG,eAAewG,OAAK,EACvBvG,UAAU,iBACVwG,gBAAgB,UAGc,iBAAtBF,EAASG,SACP,kBAAC,IAAD,CAAiBC,KAAM,GAAI1G,UAAU,wBACrC,kBAAC,IAAD,CAAiB0G,KAAM,GAAI1G,UAAU,wBAE3C,0BAAMA,UAAU,uBAAhB,kBAGZ,4BAAQA,UAAU,UAAUmC,QAASvC,KAAKyG,SAA1C,iB,GA3DS9F,aAwENC,qBAPQ,SAAC,GAAyB,IAAxB7C,EAAuB,EAAvBA,WAErB,MAAM,CACJmC,KAH0C,EAAXvD,MACdoB,MAMR6C,CAAwBmG,YAAWP,IC1E5CQ,G,2MAEFlG,MAAQ,CACNZ,KAAM,e,EAGR+G,YAAc,SAAChG,GACb,IAAMnE,EAAOmE,EAAME,OAAO+F,UAAUC,YACpC,EAAK9F,SAAS,CACZnB,KAAMpD,K,EAIVsK,UAAY,SAACnG,GACCA,EAAME,OACdI,YAAYC,UAAUC,OAAO,S,EAGnCC,cAAgB,SAACT,GACb,IAAKA,EAAME,OAAOQ,QAAQ,0BAA2B,CACjD,IACIC,EADAC,EAAYC,SAASC,uBAAuB,uBAEhD,IAAKH,EAAI,EAAGA,EAAIC,EAAUtB,OAAQqB,IAAK,CACrC,IAAII,EAAeH,EAAUD,GACzBI,EAAaR,UAAUS,SAAS,SAClCD,EAAaR,UAAUU,OAAO,W,EAc1CmF,OAAS,SAACpG,GACNA,EAAM+C,iBADU,IAER9D,EAAS,EAAKY,MAAdZ,KACFnC,EAAa,EAAKkC,MAAMtD,MAAMwI,QAAO,SAACmC,GAAD,OAAOA,EAAE,GAAGxK,OAASoD,KAEhE,EAAKD,MAAMf,SAASqH,EAAcxI,EAAW,GAAG,M,mFAZhD+D,SAASK,iBAAiB,QAASnC,KAAK0B,iB,6CAIxCI,SAASM,oBAAoB,QAASpC,KAAK0B,iB,+BAWtC,IAAD,OACIxB,EAASF,KAAKc,MAAdZ,KACAvD,EAAUqD,KAAKC,MAAftD,MAER,OACE,yBAAKyD,UAAU,SACb,yBAAKA,UAAU,cACX,wBAAIA,UAAU,eAAd,qBACA,uBAAGA,UAAU,mBAAb,SACA,uBAAGA,UAAU,mBAAb,qCACA,yBAAKA,UAAU,mBACb,uCAII,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,wBAAwBmC,QAASvC,KAAKoH,WACrDlH,GAEH,yBAAKE,UAAU,uBACXzD,EAAM6F,KAAI,SAACtC,GAAD,OACV,4BAAQuC,IAAKvC,EAAK,GAAIE,UAAU,sBAAsBmC,QAAS,EAAK0E,aAClE,yBAAK5G,IAAKH,EAAK,GAAGnD,UAAWuD,IAAI,gBACjC,8BAAOJ,EAAK,GAAGpD,YAKvB,yBAAKsD,UAAU,UACb,4BAAQA,UAAU,aAAa8D,SAAmB,gBAAThE,EAAwBqC,QAASvC,KAAKqH,QAA/E,iB,GA5EJ1G,aA6FLC,sBANQ,SAAC,GAAe,IAAbjE,EAAY,EAAZA,MACxB,MAAO,CACLA,MAAOiG,OAAO2E,QAAQ5K,MAIXiE,CAAwBoG,ICrFjCQ,G,4LAGFxH,KAAKC,MAAMf,SAASS,O,+BAGb,IACC8H,EAAiBzH,KAAKC,MAAtBwH,aACR,OACE,kBAAC,IAAD,KACIA,EACE,kBAAC,GAAD,MACA,yBAAKrH,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAYqE,MAAO,CAAEiD,gBAAiB,UAAWC,OAAQ,SACzD,kBAAC,IAAD,CAAOhB,OAAK,EAACiB,KAAK,IAAIC,UAAWhH,IACjC,kBAAC,IAAD,CAAO+G,KAAK,OAAOC,UAAW3B,IAC9B,kBAAC,IAAD,CAAO0B,KAAK,eAAeC,UAAWlC,IACtC,kBAAC,IAAD,CAAOiC,KAAK,iBAAiBC,UAAW/C,W,GAnBtCnE,aAmCHC,sBANQ,SAAC,GACtB,MAAM,CACJ6G,aAA6B,OAFQ,EAAhB1J,cAMV6C,CAAwB4G,I,aC3CxBM,gBAAgB,CAC3BnL,MCAW,WAAiC,IAAlBmE,EAAiB,uDAAX,GAAIiH,EAAO,uCAC3C,OAAOA,EAAOzI,MACV,IlBRqB,gBkBSjB,OAAO,eACAwB,EADP,GAEOiH,EAAOpL,OAElB,IpBV6B,wBoBU7B,MACuCoL,EAAOhJ,OAAlCA,EADZ,EACYA,OAAQD,EADpB,EACoBA,IAAKf,EADzB,EACyBA,WACrB,OAAO,eACA+C,EADP,eAEK/C,EAFL,eAGW+C,EAAM/C,GAHjB,CAIQf,QAAQ,eACD8D,EAAM/C,GAAYf,QADlB,eAEF8B,EAAMC,QAIvB,IpBrBoB,eoBqBpB,IACYpB,EAAaoK,EAAbpK,SACR,OAAO,eACAmD,EADP,eAEKnD,EAASP,OAFd,eAGW0D,EAAMnD,EAASP,QAH1B,CAIQH,UAAU6D,EAAMnD,EAASP,QAAQH,UAAU0B,OAAO,CAAChB,EAASd,SAGxE,QACI,OAAOiE,ID5Bf7D,UEDW,WAAuC,IAApB6D,EAAmB,uDAAX,GAAIiH,EAAO,uCACjD,OAAOA,EAAOzI,MACV,IrBNyB,oBqBOrB,OAAO,eACAwB,EADP,GAEOiH,EAAO9K,WAElB,IrBV6B,wBqBU7B,MACuC8K,EAAOhJ,OAAlCD,EADZ,EACYA,IAAKC,EADjB,EACiBA,OAAQhB,EADzB,EACyBA,WACrB,OAAO,eACA+C,EADP,eAEKhC,EAFL,eAGWgC,EAAMhC,GAHjB,eAISC,EAJT,eAKe+B,EAAMhC,GAAKC,GAL1B,CAMYxB,MAAMuD,EAAMhC,GAAKC,GAAQxB,MAAMoB,OAAO,CAACZ,UAIvD,IrBrBoB,eqBqBpB,IACYJ,EAAaoK,EAAbpK,SACR,OAAO,eACAmD,EADP,eAEKnD,EAASd,GAFd,eAGWc,KAGf,QACI,OAAOmD,IF1Bf/C,WGJW,WAA0C,IAAtB+C,EAAqB,uDAAb,KAAMiH,EAAO,uCACpD,OAAOA,EAAOzI,MACV,IPNuB,kBOOnB,OAAOyI,EAAOlL,GAClB,QACI,OAAOiE,IHAfkH,WAAWC,sBIAAC,GATA,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACL,GACjCM,QAAQC,MAAMP,EAAOzI,MACrB+I,QAAQE,IAAI,eAAgBR,GAC5B,IAAMtE,EAAQ2E,EAAKL,GAGnB,OAFAM,QAAQE,IAAI,yBAA0BJ,EAAMhJ,YAC5CkJ,QAAQG,WACD/E,K,SCFIgF,gBACXC,KACAR,ICGEC,GAAQQ,aAAYC,GAAQC,IAElCC,IAASC,OACL,kBAAC,WAAD,CAAUZ,MAAOA,IACb,kBAAC,GAAD,OAEJrG,SAASkH,eAAe,W","file":"static/js/main.a4a346f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw.5f19ec41.svg\";","module.exports = __webpack_public_path__ + \"static/media/page_not_found.6a37cd2f.svg\";","let users = {\n    sarahedo: {\n      id: 'sarahedo',\n      name: 'Sarah Edo',\n      avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\n      answers: {\n        \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n        \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n        \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n      },\n      questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n    },\n    tylermcginnis: {\n      id: 'tylermcginnis',\n      name: 'Tyler McGinnis',\n      avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\n      answers: {\n        \"vthrdm985a262al8qx3do\": 'optionOne',\n        \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n      },\n      questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n    },\n    johndoe: {\n      id: 'johndoe',\n      name: 'John Doe',\n      avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\n      answers: {\n        \"xj352vofupe1dqz9emx13r\": 'optionOne',\n        \"vthrdm985a262al8qx3do\": 'optionTwo',\n        \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n      },\n      questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n    }\n  }\n  \n  let questions = {\n    \"8xf0y6ziyjabvozdd253nd\": {\n      id: '8xf0y6ziyjabvozdd253nd',\n      author: 'sarahedo',\n      timestamp: 1467166872634,\n      optionOne: {\n        votes: ['sarahedo'],\n        text: 'have horrible short term memory',\n      },\n      optionTwo: {\n        votes: [],\n        text: 'have horrible long term memory'\n      }\n    },\n    \"6ni6ok3ym7mf1p33lnez\": {\n      id: '6ni6ok3ym7mf1p33lnez',\n      author: 'johndoe',\n      timestamp: 1468479767190,\n      optionOne: {\n        votes: [],\n        text: 'become a superhero',\n      },\n      optionTwo: {\n        votes: ['johndoe', 'sarahedo'],\n        text: 'become a supervillain'\n      }\n    },\n    \"am8ehyc8byjqgar0jgpub9\": {\n      id: 'am8ehyc8byjqgar0jgpub9',\n      author: 'sarahedo',\n      timestamp: 1488579767190,\n      optionOne: {\n        votes: [],\n        text: 'be telekinetic',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be telepathic'\n      }\n    },\n    \"loxhs1bqm25b708cmbf3g\": {\n      id: 'loxhs1bqm25b708cmbf3g',\n      author: 'tylermcginnis',\n      timestamp: 1482579767190,\n      optionOne: {\n        votes: [],\n        text: 'be a front-end developer',\n      },\n      optionTwo: {\n        votes: ['sarahedo'],\n        text: 'be a back-end developer'\n      }\n    },\n    \"vthrdm985a262al8qx3do\": {\n      id: 'vthrdm985a262al8qx3do',\n      author: 'tylermcginnis',\n      timestamp: 1489579767190,\n      optionOne: {\n        votes: ['tylermcginnis'],\n        text: 'find $50 yourself',\n      },\n      optionTwo: {\n        votes: ['johndoe'],\n        text: 'have your best friend find $500'\n      }\n    },\n    \"xj352vofupe1dqz9emx13r\": {\n      id: 'xj352vofupe1dqz9emx13r',\n      author: 'johndoe',\n      timestamp: 1493579767190,\n      optionOne: {\n        votes: ['johndoe'],\n        text: 'write JavaScript',\n      },\n      optionTwo: {\n        votes: ['tylermcginnis'],\n        text: 'write Swift'\n      }\n    },\n  }\n  \n  function generateUID () {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n  }\n  \n  export function _getUsers () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...users}), 1000)\n    })\n  }\n  \n  export function _getQuestions () {\n    return new Promise((res, rej) => {\n      setTimeout(() => res({...questions}), 1000)\n    })\n  }\n  \n  export function _saveQuestion (question) {\n    return new Promise((res, rej) => {\n      const authedUser = question.author;\n      const formattedQuestion = formatQuestion(question);\n  \n      setTimeout(() => {\n        questions = {\n          ...questions,\n          [formattedQuestion.id]: formattedQuestion\n        }\n        \n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            questions: users[authedUser].questions.concat([formattedQuestion.id])\n          }\n        }\n  \n        res(formattedQuestion)\n      }, 1000)\n    })\n  }\n  \n  export function _saveQuestionAnswer ({ authedUser, qid, answer }) {    \n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        users = {\n          ...users,\n          [authedUser]: {\n            ...users[authedUser],\n            answers: {\n              ...users[authedUser].answers,\n              [qid]: answer\n            }\n          }\n        }\n  \n        questions = {\n          ...questions,\n          [qid]: {\n            ...questions[qid],\n            [answer]: {\n              ...questions[qid][answer],\n              votes: questions[qid][answer].votes.concat([authedUser])\n            }\n          }\n        }\n  \n        res()\n      }, 500)\n    })\n  }\n\n  function formatQuestion ({ optionOneText, optionTwoText, author }) {\n    return {\n      id: generateUID(),\n      timestamp: Date.now(),\n      author,\n      optionOne: {\n        votes: [],\n        text: optionOneText,\n      },\n      optionTwo: {\n        votes: [],\n        text: optionTwoText,\n      }\n    }\n  }","import {\n    _getUsers,\n    _getQuestions,\n    _saveQuestion,\n    _saveQuestionAnswer,\n} from './_DATA.js'\n\nexport function getInitialData(){\n    return Promise.all([\n        _getUsers(),\n        _getQuestions()\n    ]).then(([users,questions]) => ({\n        users,\n        questions\n    }))\n}\n\nexport function saveQuestion(info){\n    return _saveQuestion(info)\n}\n\nexport function saveQuestionAnswer(info){\n    return _saveQuestionAnswer(info)\n}","import { saveQuestionAnswer, saveQuestion } from \"../utils/api\"\nimport { showLoading, hideLoading } from 'react-redux-loading'\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const SAVE_QUESTIONS_ANSWER = 'SAVE_QUESTIONS_ANSWER'\nexport const ADD_QUESTION = 'ADD_QUESTION'\n\nexport function handleAddQuestion(question){\n    return (dispatch, getState) => {\n        dispatch(showLoading());\n        const { authedUser } = getState()\n        question.author = authedUser\n        return saveQuestion(question)\n            .then((formattedQuestion) => dispatch(addQuestion(formattedQuestion)))\n            .then(() => dispatch(hideLoading()));\n\n    }\n}\n\nexport function handleSaveQuestionAnswer(answer){\n    return ( dispatch, getState ) => {\n        dispatch(showLoading());\n        const {authedUser} = getState()\n        answer.authedUser = authedUser\n        \n        return saveQuestionAnswer(answer)\n        .then(() => dispatch(questionAnswer(answer)))\n        .then(() => dispatch(hideLoading()));\n\n    }\n}\n\nfunction addQuestion(question){\n    return {\n        type:ADD_QUESTION,\n        question\n    }\n}\n\nfunction questionAnswer(answer){\n    return{\n        type:SAVE_QUESTIONS_ANSWER,\n        answer\n    }\n}\n\nexport function receiveQuestions(questions){\n    return {\n        type: RECEIVE_QUESTIONS,\n        questions\n    }\n}","import { receiveUsers } from './users'\nimport { receiveQuestions } from './questions'\nimport { getInitialData } from '../utils/api'\n\nexport const SAVE_QUESTIONS_ANSWER = 'SAVE_QUESTIONS_ANSWER'\n\nexport function handleInitialData(){\n    return (dispatch) => {\n        return getInitialData()\n        .then(({users,questions}) => {\n            dispatch(receiveUsers(users))\n            dispatch(receiveQuestions(questions))\n            // dispatch(setAuthedUser('sarahedo'))\n        })\n    }\n}","export const RECEIVE_USERS = 'RECEIVE_USERS'\n\nexport function receiveUsers(users){\n    return {\n        type:RECEIVE_USERS,\n        users\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { convertTime } from '../utils/helpers'\nimport { Link } from 'react-router-dom'\nclass PollCard extends Component {\n    render(){\n        const { id,timestamp, optionOne, optionTwo } = this.props.question\n        const { name , avatarURL} = this.props.user\n        \n        return (\n            <Link to={`/questions/${id}`} className=\"question\">\n                <div className=\"question-header\">\n                    <div className=\"question-header-avatar\">\n                        <img src={avatarURL} alt={`avatar of ${name}`} className=\"avatar\"/>\n                        <div>\n                            <p className=\"question-header-avatar--name\">{name}</p>    \n                        </div>\n                    </div>\n                    <div className=\"question-header-votes\">\n                        <p>{optionOne.votes.length +optionTwo.votes.length } Votes</p>\n                    </div> \n                </div>\n                <p className=\"question-text\">\n                    {`Would you rather ${optionOne.text} or ${optionTwo.text} ?`}\n                </p>\n                <p className=\"question-date\">{convertTime(timestamp)}</p> \n            </Link>\n\n        )\n    }\n}\n\nconst mapStateToProps = ({ questions, users, authedUser}, { id }) => {\n    const question = questions[id]\n    const user = users[question.author]\n    return {\n        question,\n        user,\n    }\n}\n\nexport default connect(mapStateToProps)(PollCard)\n","export function convertTime(timestamp){\n    const date = new Date(timestamp)\n    // const time = date.toLocaleTimeString('en-US')\n    return date.toUTCString().substr(4,13)\n}\n\nexport function calcPercentageOfPoll(totalVotes, optionVote){\n    return ((optionVote/totalVotes) * 100).toFixed(1)\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PollCard from './pollCard'\nimport noQuestion from '../icon/undraw.svg'\n\nclass Home extends Component {\n\n    state = {\n        questionType: 'Unanswered'\n    }\n\n    handleChoice = (event) => {\n        const val = event.target.innerText\n        if(val !== this.state.questionType){\n            this.setState({\n                questionType: val\n            })\n        }\n    }\n\n    handleSwitchBtn = (event) => {\n        const btn = event.target\n        btn.nextSibling.classList.toggle(\"show\")\n    }\n\n    closeDropDwon = (event) => {\n        if (!event.target.matches('.dropdown-btn')) {\n            var dropdowns = document.getElementsByClassName(\"dropdown-choices\");\n            var i;\n            for (i = 0; i < dropdowns.length; i++) {\n              var openDropdown = dropdowns[i];\n              if (openDropdown.classList.contains('show')) {\n                openDropdown.classList.remove('show');\n              }\n            }\n          }\n    }\n\n    componentDidMount(){\n        document.addEventListener('click', this.closeDropDwon)\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('click', this.closeDropDwon)\n    }\n\n    render(){\n        const { answeredQuestionsID,  unAnsweredQuestionsID} = this.props\n        const { questionType } = this.state\n        \n        return(\n            <div className=\"home\">\n                <div className=\"top-section\">\n                    <h1 className=\"top-section--heading\">Questions</h1>\n                    <div className=\"dropdown\">\n                        <button className=\"dropdown-btn\" onClick={this.handleSwitchBtn}>{questionType}</button>\n                            {\n                               questionType ===  'Unanswered' \n                                ?   <div className=\"dropdown-choices\">\n                                        <div onClick={this.handleChoice} className=\"choice-active\">Unanswered</div>\n                                        <div onClick={this.handleChoice}>Answered</div>\n                                    </div>\n                                :   <div className=\"dropdown-choices\">\n                                        <div onClick={this.handleChoice}>Unanswered</div>\n                                        <div onClick={this.handleChoice} className=\"choice-active\">Answered</div>\n                                    </div>\n                            }\n                    </div>\n                </div>\n                <p className=\"info\">Below are the Questions created by all users.</p>\n                \n                {\n            \n                    questionType === 'Answered' \n                    ? \n                        answeredQuestionsID.map((id) => (\n                            <PollCard key={id} id={id}/>\n                        ))\n                    : unAnsweredQuestionsID.length > 0 \n                        ? \n                            unAnsweredQuestionsID.map((id) => (\n                                <PollCard key={id} id={id}/>\n                            ))\n                        :   <div className=\"error-conatiner\">\n                                <img src={noQuestion} alt='no more question' className=\"question-error\"></img>\n                                <p className=\"info\">No more question to answer</p>\n                            </div>\n                \n                }\n            </div>\n        ) \n    }\n}\n\nconst mapStateToProps = ({ questions, authedUser,users }) => {\n    const questionsID = Object.keys(questions).sort((a,b) => questions[b].timestamp - questions[a].timestamp)\n    let answeredQuestionsID = []\n    let unAnsweredQuestionsID = []\n    questionsID.forEach(id => {\n        let found = false;\n        const QuestionVotes = [...questions[id].optionOne.votes, ...questions[id].optionTwo.votes]\n        for(let i = 0 ; i < QuestionVotes.length; i++){       \n            if(QuestionVotes[i] === authedUser){\n                answeredQuestionsID.push(id)\n                found = true\n                break\n            }\n        };\n        if(!found){\n            unAnsweredQuestionsID.push(id)\n        }\n    });\n    \n\n    return {\n        answeredQuestionsID,\n        unAnsweredQuestionsID\n    }\n  }\n\nexport default connect(mapStateToProps)(Home)","import React from 'react'\n\nconst Option = (props) => {\n    const { id, option, optionText,stateOption} = props\n    return (\n        <div className=\"option\">\n            <input\n                id={optionText}\n                type='radio' \n                name={id}  \n                value={option}\n                checked={stateOption === option}\n                onChange={(event)=>props.handleUserchoice(event)}\n            />\n            <label htmlFor={optionText}>\n                {optionText}   \n            </label>\n        </div>\n    )\n}\n\nexport default Option","import React, { Component } from 'react'\nimport { handleSaveQuestionAnswer } from '../actions/questions'\nimport { connect } from 'react-redux'\nimport Option from './Option'\nclass PollQuestion extends Component {\n    state = {\n        option: null\n    }\n\n    handleUserchoice = (event) => {\n        this.setState({\n            option: event.target.value\n        })\n    }\n\n    handlePollAnswer = (event) => {\n        event.preventDefault()\n        const answer = this.state.option\n        const { id } = this.props.question\n        this.props.dispatch(handleSaveQuestionAnswer({\n            answer, \n            qid:id\n        }))\n    }\n\n    render(){\n        const { optionOne, optionTwo, id } = this.props.question\n        const { option } = this.state\n        return (\n            <div>\n                <form onSubmit={this.handlePollAnswer} className=\"form\">\n                    <Option \n                        id={id} \n                        option='optionOne'\n                        stateOption={this.state.option}\n                        optionText={optionOne.text}\n                        handleUserchoice={this.handleUserchoice}\n                    />\n                    <Option \n                        id={id} \n                        option='optionTwo' \n                        stateOption={this.state.option}\n                        optionText={optionTwo.text}\n                        handleUserchoice={this.handleUserchoice}\n                    />\n                    <div>\n                        <button disabled={!option} className=\"question-btn\">vote</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProp = ({ questions}, { id }) => {\n    const question = questions[id] \n    return {\n        question\n    }\n}\n\nexport default connect(mapStateToProp)(PollQuestion)","import React from 'react'\nimport { calcPercentageOfPoll } from '../utils/helpers'\nimport { connect } from 'react-redux'\nconst ResultCard = (props) => {    \n    const { option, totalVotes, authedUser} = props\n    const optionPercentage = calcPercentageOfPoll(totalVotes,option.votes.length)+'%';    \n    return (\n            <div className={option.votes.indexOf(authedUser) !== -1 ? 'result choice' : 'result'}>\n                <div className=\"result-container\">\n                    <p className=\"result-text\">{option.text}</p>\n                    <p className=\"result-percentage\">{optionPercentage}</p>\n                </div>\n                <div className=\"result-progress\">\n                    <span style={{width:optionPercentage}}></span>\n                </div>\n                <p className=\"result-votes\">{option.votes.length} votes</p>\n            </div>\n    )\n}\nconst mapStateToProps = ({ authedUser }) => {\n    return {\n        authedUser\n    }\n}\n\nexport default connect(mapStateToProps)(ResultCard)","import React from \"react\"\nimport ResultCard from './ResultCard'\nconst PollResualt = (props) => {\n    const { optionOne, optionTwo} = props.question\n    const totalVotes = [...optionOne.votes, ...optionTwo.votes].length\n\n    return(\n        <div>\n            <ResultCard option={optionOne} totalVotes={totalVotes}/>\n            <ResultCard option={optionTwo} totalVotes={totalVotes}/>\n        </div>\n    )\n}\n\nexport default PollResualt","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport pageNotFound from '../icon/page_not_found.svg'\nconst PageNotFound = (props) => {\n    return (\n        <div className=\"notFound home\">\n            <h1>Oops!</h1>\n            <p className= 'info'>The question you are looking for, does not exist.</p>\n            <div>\n                <img src={pageNotFound} alt='page not found'></img>\n                <p>404 · Page not found</p>\n                <Link className=\"return-btn\"  to='/'>Return</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default PageNotFound","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PollQuestion from \"./PollQuestion\";\nimport PollResault from \"./PollResault\";\nimport PollCard from './pollCard'\nimport PageNotFound from './pageNotFound'\nclass PollPage extends Component {\n    render(){   \n        \n        if(!this.props.question){\n            return <PageNotFound />\n        }\n\n        const { name, avatarURL,questions } = this.props.user \n        const { id } = this.props.match.params\n        const { answers} = this.props.authedUserInfo\n        return (\n            this.props.question ?\n            <div className=\"home\">\n                <img src={avatarURL} alt={`avatar of ${name}`} className=\"question-avatar\"/>\n                <p className=\"question-heading\">Would you rather ?</p>\n                <p className=\"info\">Asked by <span className=\"author\">{name}</span></p>\n                {\n                    answers[id] \n                        ? <PollResault question={this.props.question}/>\n                        : <PollQuestion id={id}/>\n                            \n                }\n                {\n                    questions.length > 0 && <p className=\"user-question\">{`Other questions by ${name}`}</p>\n                }\n                {\n                    questions.filter((qid) => qid !== id).map((id) => (\n                        <PollCard key={id} id={id}/>\n                    ))\n                }\n                \n            </div>\n            : null\n        )\n    }\n}\n\nconst mapStateToProp = ({ questions, authedUser, users}, { match }) => {\n    const question = questions[match.params.id]    \n    let user, authedUserInfo;\n    if(question){\n        user = users[question.author]    \n        authedUserInfo = users[authedUser]\n    }\n    \n    return {\n        question,\n        user,\n        authedUserInfo\n    }\n}\n\nexport default connect(mapStateToProp)(PollPage)","import React from 'react'\nimport {AiOutlineTrophy } from 'react-icons/ai'\n\nconst UserRecord = (props) => {\n    const { rank, userName, userAvatar, answeredQuestions, createdQuestions, score} = props\n\n    return (\n        <tr>\n            <td>{rank === 1 ? <AiOutlineTrophy/> : rank}</td>\n            <td>\n                <div className=\"leader-avatar\">\n                    <img src={userAvatar} alt='userAvatar'/>\n                    <p>{userName}</p>\n                </div>\n                \n            </td>\n            <td>{answeredQuestions}</td>\n            <td>{createdQuestions}</td>\n            <td>{score}</td>\n        </tr>\n    )\n}\n\nexport default UserRecord","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport UserRecord from \"./UserRecord\";\nclass Leaderboard extends Component {\n    \n    userRank = (users) => {\n        let userScore = []\n        const usersId = Object.keys(users);\n        usersId.forEach(id => {\n            userScore = [\n                ...userScore,\n                {\n                    id,\n                    score: Object.keys(users[id].answers).length + Object.keys(users[id].questions).length\n                }\n            ]\n        });\n\n        userScore.sort((aUser, bUser) => bUser.score - aUser.score)\n        return userScore\n    }\n\n    render(){\n        const usersScore = this.userRank(this.props.users)\n        const { users } = this.props\n        return (\n            <div className=\"home\">\n                <h1 className=\"top-section--heading\">Leader board</h1>\n                <p className=\"info\">Below are the most active users of our game</p>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Rank</th>\n                            <th>User</th>\n                            <th>Answered Questions</th>\n                            <th>Created Questions</th>\n                            <th>Score</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            usersScore.map( (user,index) => (\n                                <UserRecord \n                                    key={user.id}\n                                    rank={index+1}\n                                    userName={users[user.id].name}\n                                    userAvatar= {users[user.id].avatarURL}\n                                    answeredQuestions={Object.keys(users[user.id].answers).length}\n                                    createdQuestions={Object.keys(users[user.id].questions).length}\n                                    score={user.score}\n                                />\n                            )) \n                        }\n                    </tbody>\n                </table>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToprops = ({ users }) => {\n    return {\n        users\n    }\n}\n\nexport default connect(mapStateToprops)(Leaderboard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { handleAddQuestion } from '../actions/questions'\nimport { Redirect } from 'react-router-dom'\nclass NewPoll extends Component {\n    state = {\n        optionOne: '',\n        optionTwo: '',\n        toHome: false\n    }\n\n    handleStateChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    } \n\n    addNewPoll = (event) => {\n        event.preventDefault();\n        const { dispatch } = this.props\n        dispatch(handleAddQuestion({\n            optionOneText: this.state.optionOne,\n            optionTwoText: this.state.optionTwo,\n        }))\n\n        this.setState({\n            optionOne: '',\n            optionTwo: '',\n            toHome: true\n\n        })\n    }\n    render(){\n        const { optionOne, optionTwo, toHome } = this.state\n\n        if(toHome){\n            return <Redirect to='/' />\n        }\n\n        return(\n            <div className=\"home\">\n                <h1 className=\"top-section--heading\">Create Question</h1>\n                <form onSubmit={this.addNewPoll}>\n                    <p className=\"info\">Complete the below fields to create your question</p>\n                    <p className=\"form-question\">Would you rather...</p>\n                    <div className=\"form-options\">\n                        <input \n                            name='optionOne'\n                            type='text' \n                            placeholder=\"Enter option one\"\n                            value = {optionOne}\n                            onChange= {this.handleStateChange}\n                        />\n                        <input \n                            name='optionTwo'\n                            type='text' \n                            placeholder=\"Enter option Two\"\n                            value = {optionTwo}\n                            onChange= {this.handleStateChange}\n                        />\n                    </div>\n                    \n                    <button className='form-btn' disabled={!optionOne ||  !optionTwo}>add</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NewPoll)","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\n\n\nexport function setAuthedUser(id){\n    return {\n        type:SET_AUTHED_USER,\n        id\n    }\n}","import React, {Component} from 'react'\nimport {NavLink} from 'react-router-dom'\nimport { AiTwotoneHome,AiOutlineHome,AiOutlineTrophy,AiTwotoneTrophy } from 'react-icons/ai'\nimport {IoMdAddCircleOutline,IoMdAddCircle} from 'react-icons/io'\nimport { withRouter } from \"react-router\";\nimport { setAuthedUser } from '../actions/authedUser'\nimport { connect } from 'react-redux'\nclass Navbar extends Component {\n    signOut = (event) => {\n        event.preventDefault()\n        const id = null\n        this.props.dispatch(setAuthedUser(id))\n    }\n\n    render(){\n    const { avatarURL, name} = this.props.user\n    const { location } = this.props\n    \n    return (\n        <nav className=\"nav\">\n            <h1 className=\"nav-heading\">Would you rather?\n            </h1>\n            <div className=\"nav-avatar\">\n                <img src={avatarURL} alt={`avatar of ${name}`} className='nav-avatar-img'></img>\n                <p className='nav-avatar-text'>hello, {name}</p>\n            </div>\n            <ul className=\"nav-list\">\n                <NavLink \n                    to=\"/\" exact\n                    className=\"nav-list--item\"\n                    activeClassName=\"active\"\n                    >\n                        {\n                            location.pathname === '/' \n                            ? <AiTwotoneHome size={25} className=\"nav-list--item-icon\"/>\n                            : <AiOutlineHome size={25} className=\"nav-list--item-icon\"/>\n                        }\n                    <span className=\"nav-list--item-text\">Home</span>\n                </NavLink>\n\n                <NavLink \n                    to=\"/add\" exact\n                    className=\"nav-list--item\"\n                    activeClassName=\"active\"\n                    >\n                        {\n                            location.pathname === '/add' \n                            ? <IoMdAddCircle size={25} className=\"nav-list--item-icon\"/>\n                            : <IoMdAddCircleOutline size={25} className=\"nav-list--item-icon\"/>\n                        }                     \n                        <span className=\"nav-list--item-text\">create Question</span>\n                </NavLink>\n\n                <NavLink \n                    to=\"/leaderboard\" exact\n                    className=\"nav-list--item\"\n                    activeClassName=\"active\"\n                    >\n                        {\n                            location.pathname === '/leaderboard' \n                            ? <AiTwotoneTrophy size={25} className=\"nav-list--item-icon\"/>\n                            : <AiOutlineTrophy size={25} className=\"nav-list--item-icon\"/>\n                        }                    \n                        <span className=\"nav-list--item-text\">leader board</span>\n                </NavLink>       \n            </ul>\n            <button className='nav-btn' onClick={this.signOut}>sign Out</button>\n        </nav>\n        )\n    }\n}\n\nconst mapStateToProp = ({authedUser, users}) => {\n    const user = users[authedUser]\n    return{\n      user\n    }\n  }\n\nexport default connect(mapStateToProp)(withRouter(Navbar))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { setAuthedUser } from '../actions/authedUser'\n\n\nclass Login extends Component{\n\n    state = {\n      user: 'select user'\n    }\n\n    handleState = (event) => {\n      const name = event.target.lastChild.textContent;\n      this.setState({\n        user: name\n      })\n    }\n\n    handleBtn = (event) => {\n      const btn = event.target\n      btn.nextSibling.classList.toggle(\"show\")\n    }\n\n    closeDropDwon = (event) => {\n        if (!event.target.matches('.login-dropdown-toggle')) {\n            var dropdowns = document.getElementsByClassName(\"login-dropdown-menu\");\n            var i;\n            for (i = 0; i < dropdowns.length; i++) {\n              var openDropdown = dropdowns[i];\n              if (openDropdown.classList.contains('show')) {\n                openDropdown.classList.remove('show');\n              }\n            }\n          }\n    }\n\n    componentDidMount(){\n        document.addEventListener('click', this.closeDropDwon)\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('click', this.closeDropDwon)\n    }\n\n    signIn = (event) => {\n        event.preventDefault()\n        const { user } = this.state\n        const authedUser = this.props.users.filter((u) => u[1].name === user)\n        \n        this.props.dispatch(setAuthedUser(authedUser[0][0]))\n      }\n\n    render(){\n        const { user } = this.state\n        const { users } = this.props    \n                    \n        return (\n          <div className=\"login\">\n            <div className=\"login-card\">\n                <h1 className=\"nav-heading\">Would you Rather?</h1>\n                <p className=\"login-card-text\">login</p>\n                <p className=\"login-card-info\">Login to your account to continue</p>\n                <div className=\"login-card-form\">\n                  <p>Username</p>\n                    {/* <input \n                      type='text' \n                      ref={(input) => this.input = input}/> */}\n                      <div className=\"login-dropdown\">\n                        <button className=\"login-dropdown-toggle\" onClick={this.handleBtn}>\n                          {user}\n                        </button>\n                        <div className=\"login-dropdown-menu\">\n                          { users.map((user) => (\n                            <button key={user[0]} className=\"login-dropdown-item\" onClick={this.handleState}>\n                              <img src={user[1].avatarURL} alt='user avatar'></img>\n                              <span>{user[1].name}</span>\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n                      <div className=\"loginn\">\n                        <button className=\"loginn-btn\" disabled={user === 'select user'} onClick={this.signIn}>Login</button>\n                      </div>\n                  \n                </div>\n                \n            </div>\n          </div>\n        )\n    }\n}\n\nconst mapStateToProp = ({ users }) => {\n  return {\n    users: Object.entries(users),\n  }\n}\n\nexport default connect(mapStateToProp)(Login)","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './home'\nimport PollPage from './pollPage'\nimport Leaderboard from './Leaderboard'\nimport NewPoll from './newPoll'\nimport Navbar from './Navbar';\nimport Login from './login'\nimport LoadingBar from 'react-redux-loading'\n\n\nclass App extends Component {\n  \n  componentDidMount(){\n    this.props.dispatch(handleInitialData())\n  }\n\n  render(){\n    const { unAuthorised } = this.props\n    return (\n      <BrowserRouter>\n        { unAuthorised\n          ? <Login />\n          : <div className='container'>\n              <Navbar />\n              <div className=\"main\">\n                <LoadingBar style={{ backgroundColor: '#fc5185', height: '5px' }}/>\n                <Route exact path='/' component={Home} />\n                <Route path='/add' component={NewPoll} />\n                <Route path='/leaderboard' component={Leaderboard} />\n                <Route path='/questions/:id' component={PollPage} />\n              </div>\n            </div>\n          }\n      </BrowserRouter>\n      \n    );\n  } \n}\n\nconst mapStateToProp = ({authedUser}) => {\n  return{\n    unAuthorised: authedUser === null,\n  }\n}\n\nexport default connect(mapStateToProp)(App);\n","import users from './users'\nimport questions from './questions'\nimport authedUser from './authedUser'\nimport { combineReducers } from 'redux'\nimport { loadingBarReducer } from 'react-redux-loading'\nexport default combineReducers({\n    users,\n    questions,\n    authedUser,\n    loadingBar:loadingBarReducer\n})","import {\n    RECEIVE_USERS\n} from '../actions/users'\n\nimport { SAVE_QUESTIONS_ANSWER, ADD_QUESTION } from '../actions/questions'\n\nexport default function users(state={}, action){\n    switch(action.type){\n        case RECEIVE_USERS: \n            return {\n                ...state,\n                ...action.users\n            }\n        case SAVE_QUESTIONS_ANSWER:\n            const { answer, qid, authedUser} = action.answer\n            return {\n                ...state,\n                [authedUser]:{\n                    ...state[authedUser],\n                    answers:{\n                        ...state[authedUser].answers,\n                        [qid]: answer\n                        }\n                    }\n                }\n        case ADD_QUESTION:\n            const { question } = action\n            return {\n                ...state,\n                [question.author]:{\n                    ...state[question.author],\n                    questions:state[question.author].questions.concat([question.id])\n                }\n            }\n        default:\n            return state\n    }\n}","import {\n    RECEIVE_QUESTIONS,\n    SAVE_QUESTIONS_ANSWER,\n    ADD_QUESTION\n} from '../actions/questions'\n\nexport default function questions(state = {}, action){    \n    switch(action.type){\n        case RECEIVE_QUESTIONS:\n            return {\n                ...state,\n                ...action.questions\n            }\n        case SAVE_QUESTIONS_ANSWER:\n            const { qid, answer, authedUser} = action.answer            \n            return {\n                ...state,\n                [qid]:{\n                    ...state[qid],\n                    [answer]:{\n                        ...state[qid][answer],\n                        votes:state[qid][answer].votes.concat([authedUser])\n                    }\n                }\n            }\n        case ADD_QUESTION:\n            const { question } = action \n            return {\n                ...state,\n                [question.id]:{\n                    ...question\n                }\n            }\n        default:\n            return state\n    }\n}","import {\n    SET_AUTHED_USER\n} from '../actions/authedUser'\n\nexport default function authedUesr(state = null, action){\n    switch(action.type){\n        case SET_AUTHED_USER:\n            return action.id\n        default:\n            return state\n    }\n}","const logger = (store) => (next) => (action) => {\n    console.group(action.type)\n    console.log('the action: ', action)\n    const value = next(action)\n    console.log('state after dispatch: ', store.getState());\n    console.groupEnd()\n    return value\n}\n\nexport default logger","import { applyMiddleware } from 'redux'\nimport logger from './logger'\nimport thunk from 'redux-thunk'\n\nexport default applyMiddleware(\n    thunk,\n    logger\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nconst store = createStore(reducer,middleware)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}